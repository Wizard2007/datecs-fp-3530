unit uDatecsFP3530Consts;

interface
const
  {‘P’:	оплата наличными;}
  cPaidCodeCash = 'P';
  {‘N’:	оплата в кредит;}
  cPaidCodeCredit = 'N';
  {‘C:	оплата чеком;}
  cPaidCodeReceipt = 'C';
  {‘D:	оплата с помощью платежной карты;}
  cPaidCodeCard = 'D';

  {Группа товаров}
  cGroupNumber = 1;
  {Группа продаваемых товаров пока только А}
  cGroupInventory = 'А';                                                      

  {Результат – Один байт (результат выполнения команды):}
  {= F 		- ошибка}
  cDllFuncResultError = 'F';
  {= E		- вычисленная сумма отрицательна. Оплата не совершается}
  cDllFuncResultNegativeSum = 'E';
  {= D		- сумма оплаты меньше суммы чека (остаток в Сумма)}
  cDllFuncResultPayLessTotal = 'D';
  {= R		- сумма оплаты больше суммы чека (остаток в Сумма)}
  cDllFuncResultTotalLessPay = 'R';
  {= I		- сумма по некоторой налоговой группе отрицательна (текущая подсумма в Сумма)}
  cDllFuncResultSumBySomeTaxIsNegative = 'I';
  // Пароль поумолчанию для раоты с регистратором.
  cPassword = '0000';



  {этот параметр должен быть всегда установлен в true. Используется для
   совместимости с предыдущими версиями.}
  cTaxCheck = True;
  // признак того что внутреняя операция продажа
  cSignSale = True;
  // признак того что внутреняя операция возврат
  cSignReturn = False;
  // Печатаем Х - отчет
  RT_XReport = '2';
  // Печатаем Z - отчет
  RT_ZReport = '0';
  // Получить суммы по работе ФР
  Get_Registrator_Sum: Double = 0;
  // Длч конвертирования в деньги
  cConvertToMoney = 100;
// Нумерация битов идет так 7 .. 0
 { cBit_0: Byte =$01;
  cBit_1: Byte =$02;
  cBit_2: Byte =$04;
  cBit_3: Byte =$08;
  cBit_4: Byte = $10;
  cBit_5: Byte = $20;
  cBit_6: Byte = $40;
  cBit_7: Byte = $80;}
  cBit_0: Byte =1;
  cBit_1: Byte =2;
  cBit_2: Byte =4;
  cBit_3: Byte =8;
  cBit_4: Byte = 16;
  cBit_5: Byte = 32;
  cBit_6: Byte = 64;
  cBit_7: Byte = 128;
  {для дополнительных битов}
  {cBit_8 = $256;
  cBit_9 = $512;
  cBit_10 = $1024;
  cBit_11 = $2048;
  cBit_12 = $4096;
  cBit_13 = $8192;
  cBit_14 = $16384;
  cBit_15 = $32768;
  cBit_16 = $65536;
  cBit_17 = $131072;
  cBit_18 = $262144;
  cBit_19 = $524288;
  cBit_20 = $1048576;
  cBit_21 = $2097152;
  cBit_22 = $4194304;
  cBit_23 = $8388608;
  cBit_24 = $16777216;
  cBit_25 = $33554432;
  cBit_26 = $67108864;
  cBit_27 = $134217728;
  cBit_28 = $268435456;
  cBit_29 = $536870912;
  cBit_30 = $1073741824;
  cBit_31 = $2147483648;}
  cBit_8 = 256;
  cBit_9 = 512;
  cBit_10 = 1024;
  cBit_11 = 2048;
  cBit_12 = 4096;
  cBit_13 = 8192;
  cBit_14 = 16384;
  cBit_15 = 32768;
  cBit_16 = 65536;
  cBit_17 = 131072;
  cBit_18 = 262144;
  cBit_19 = 524288;
  cBit_20 = 1048576;
  cBit_21 = 2097152;
  cBit_22 = 4194304;
  cBit_23 = 8388608;
  cBit_24 = 16777216;
  cBit_25 = 33554432;
  cBit_26 = 67108864;
  cBit_27 = 134217728;
  cBit_28 = 268435456;
  cBit_29 = 536870912;
  cBit_30 = 1073741824;
  cBit_31 = 2147483648;
{------------------------------------------------------------------------------}
  cMsg_S0_0_7 = 'cMsg_S0_0_7 = разерв'+#10#13;//cMsg_S2.3 – 1 и S0.7 – 0, то открыт фискальный чек, S2.3 – 1 и S0.7 – 1, то открыт чек возврата.
  cMsg_S0_0_6 = 'cMsg_S0_0_6 	резерв'+#10#13;
  cMsg_S0_0_5 = 'Общая ошибка – этот бит устанавливается всегда когда установлен один из битов, маркированный символом ‘#’.'+#10#13;
  cMsg_S0_0_4 = '#	Механизм печатающего устройства неисправен'+#10#13;
  cMsg_S0_0_3 = 'cMsg_S0_0_3 Не используется'+#10#13;
  cMsg_S0_0_2 = 'Дата и время не были установлены с момента последнего аварийного обнуления RAM'+#10#13;
  cMsg_S0_0_1 = 'Код полученной команды неверен'+#10#13;
  cMsg_S0_0_0 = '#	Полученные данные содержат синтаксическую ошибку'+#10#13;
//  Байт S1 – общее назначение
  cMsg_S1_1_7 = 'cMsg_S1_1_7	резерв'+#10#13;
  cMsg_S1_1_6 = 'cMsg_S1_1_6	резерв'+#10#13;
  cMsg_S1_1_5 = 'Открыт служебный чек'+#10#13;
  cMsg_S1_1_4 = '#	Содержимое оперативной памяти было разрушено (RAM) при включении – аварийное обнуление'+#10#13;
  cMsg_S1_1_3 = '# 	Операция, связанная с печатью прекращена и перезапущена'+#10#13;
  cMsg_S1_1_2 = '#	Совершено аварийное обнуление оперативной памяти'+#10#13;
  cMsg_S1_1_1 = '#	Выполняемая команда не разрешена для текущего фискального режима принтера'+#10#13;
  cMsg_S1_1_0 = 'При выполнении команды произошло переполнение операции суммирования – Состояние 1.1 если оно установлено указывает, на то что операция не может быть выполнена'+#10#13;
//  Байт S2 – общее назначение
  cMsg_S2_2_7 = 'cMsg_S2_2_7	резерв'+#10#13;
  cMsg_S2_2_6 = 'cMsg_S2_2_6 	Не используется'+#10#13;
  cMsg_S2_2_5 = 'Открыт нефискальный чек'+#10#13;
  cMsg_S2_2_4 = 'Не используется'+#10#13;
  cMsg_S2_2_3 = 'Открыт фискальный чек'+#10#13;
  cMsg_S2_2_2 = 'cMsg_S2_2_2 Не используется'+#10#13;
  cMsg_S2_2_1 = 'cMsg_S2_2_1 Не используется'+#10#13;
  cMsg_S2_2_0 = '#	Закончилась бумага'+#10#13;
//  Байт S3 – состояние переключателей
  cMsg_S3_3_7 = 'cMsg_S3_3_7	резерв'+#10#13;
  cMsg_S3_3_6 = 'переключатель Sw7 положение ON'+#10#13;
  cMsg_S3_3_5 = 'переключатель Sw6 положение ON'+#10#13;
  cMsg_S3_3_4 = 'переключатель Sw5 положение ON'+#10#13;
  cMsg_S3_3_3 = 'переключатель Sw4 положение ON'+#10#13;
  cMsg_S3_3_2 = 'переключатель Sw3 положение ON'+#10#13;
  cMsg_S3_3_1 = 'переключатель Sw2 положение ON'+#10#13;
  cMsg_S3_3_0 = 'переключатель Sw1 положение ON'+#10#13;
//  байт S4:	фискальная память
  cMsg_S4_4_7 = 'cMsg_S4_4_7	резерв'+#10#13;
  cMsg_S4_4_6 = 'cMsg_S4_4_6	резерв'+#10#13;
  cMsg_S4_4_5 = 'этот бит устанавливается всегда когда установлен один из битов,'+
    ' маркированный символом ‘*’ в байтах 4 или 5'+#10#13;
  cMsg_S4_4_4 = '*	Фискальная память переполнена'+#10#13;
  cMsg_S4_4_3 = 'В фискальной памяти есть место по крайней мере для 50 Z-отчетов'+#10#13;
  cMsg_S4_4_2 = 'Нет модуля фискальной памяти'+#10#13;
  cMsg_S4_4_1 = 'cMsg_S4_4_1 	Не используется'+#10#13;
  cMsg_S4_4_0 = '*	Возникла ошибка при записи в фискальную память'+#10#13;
//  байт S5:	фискальная память
  cMsg_S5_5_7 = 'cMsg_S5_5_7	резерв'+#10#13;
  cMsg_S5_5_6 = 'cMsg_S5_5_6 	резерв'+#10#13;
  cMsg_S5_5_5 = 'Номер фискальной памяти запрограммирован'+#10#13;
  cMsg_S5_5_4 = 'Серийный номер был запрограммирован'+#10#13;
  cMsg_S5_5_3 = 'Устройство фискализировано'+#10#13;
  cMsg_S5_5_2 = '*	Последнее фискальное закрытие завершилось с ошибкой'+#10#13;
  cMsg_S5_5_1 = 'Фискальная память сформатирована'+#10#13;
  cMsg_S5_5_0 = '*	Фискальная память установлена в режим Read Only.'+#10#13;
{------------------------------------------------------------------------------}
{Дополнительные биты ошибок}
  {1} cSYNTAX_ERROR_Msg = '** Синтаксическая ошибка!!!'+#10#13;
  {2} cINVALID_CMD_Msg = '** Неверная команда!!!'+#10#13;
  {3} cINVALID_TIME_Msg = '** Дата и время неверны!!!'+#10#13;
  {4} cPRINT_ERROR_Msg = '** Ошибка печати!!!'+#10#13;
  {5} cSUM_OVERFLOW_Msg = '** Арифметическое переполнение!!!'+#10#13;
  {6} cCMD_NOT_ALLOWED_Msg = '** Команда не разрешена!!!'+#10#13;
  {7} cRAM_CLEARED_Msg = '** Обнуление ОЗУ!!!'+#10#13;
  {8} cPRINT_RESTART_Msg = '** Появляется совместно с FISCAL_OPEN и означает, что открыт чек возврата!!!'+#10#13;
  {9} cRAM_DESTROYED_Msg = '** Разрушение информации в ОЗУ!!!'+#10#13;
  {10} cPAPER_OUT_Msg = '** Нет бумаги'+#10#13;
  {11} cFISCAL_OPEN_Msg = '** Открыт фискальный чек!!!'+#10#13;
  {12} cNONFISCAL_OPEN_Msg = '** Открыт нефискальный чек!!!'+#10#13;
  {13--} cSERVICE_OPEN_Msg = '** cSERVICE_OPEN_Msg'+#10#13;
  {14} cF_ABSENT_Msg = '** Не обнаружен модуль фиск. памяти!!!'+#10#13;
  {15--} cF_MODULE_NUM_Msg = '** cF_MODULE_NUM_Msg'+#10#13;
  {16} cF_WRITE_ERROR_Msg = '** Ошибка записи в фиск. память!!!'+#10#13;
  {17} cF_FULL_Bit_Msg = '** Фиск. память переполнена!!!'+#10#13;
  {18} cF_READ_ONLY_Msg = '** Запись в фиск. память запрещена!!!'+#10#13;
  {19} cF_CLOSE_ERROR_Msg = '** Ошибка последнего Z-отчета!!!'+#10#13;
  {20} cF_LESS_30_Msg = '** В фиск. памяти мало свободного пространства!!!'+#10#13;
  {21--} cF_FORMATTED_Msg = '** cF_FORMATTED_Msg'+#10#13;
  {22--} cF_FISCALIZED_Msg = '** cF_FISCALIZED_Msg'+#10#13;
  {23--} cF_SER_NUM_Msg = '** cF_SER_NUM_Msg'+#10#13;
  {24} cPROTOCOL_ERROR_Msg = '** Ошибка протокола!!!'+#10#13;
  {25} cNACK_RECEIVED_Msg = '** Принят NACK!!!'+#10#13;
  {26} cTIMEOUT_ERROR_Msg = '** Таймаут (нет ответа от регистратора)!!!'+#10#13;
  {27} cCOMMON_ERROR_Msg = '** Общая ошибка (обычно другие установленные биты уточняют тип ошибки)!!!'+#10#13;
  {28--} cF_COMMON_ERROR_Msg = '** cF_COMMON_ERROR_Msg'+#10#13;
  {29--} cADD_PAPER_Msg = '** cADD_PAPER_Msg'+#10#13;
  {30--} cANY_ERROR_Msg = '** cANY_ERROR_Msg'+#10#13;
  {----------------------------------------------------------------------------}
  cSerialPort = '  Serialport:';
  cBaudRate = '  BaudRate:';
  cSuccessfully = 'Успешно.';
  cKeeepOpenedON = ' Включен режим держать подключение к регистратору.';
  cFatalErrorOccuredOnPreviousStep = 'На предиидущем шаге произошла фатальная ошибка регистратора!';  
implementation

end.
